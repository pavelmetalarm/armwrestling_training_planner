---
name: Deploy to production

on:
    push:
        branches:
            - main
            - ci/fix-prod-deploy  # temporarily included for testing

jobs:
    deploy_prod:
        runs-on: ubuntu-latest

        steps:
            - name: Deploy via SSH
              uses: appleboy/ssh-action@v1.0.3
              with:
                  host: ${{ secrets.SERVER_HOST }}
                  username: ${{ secrets.SERVER_USER }}
                  key: ${{ secrets.SERVER_SSH_KEY }}
                  script: |
                    REPO="git@github.com:${{ github.repository }}.git"
                    BRANCH="${{ github.ref_name }}"
                    REPO_DIR="$HOME/armwrestling_training_planner"


                    if [ ! -d "$REPO_DIR" ]; then
                      echo "[Deploy] Cloning repository to $REPO_DIR"
                      git clone "$REPO" "$REPO_DIR"
                      cd "$REPO_DIR"
                      git checkout "$BRANCH"
                    else
                      echo "[Deploy] Repository already exists. Pulling latest changes..."
                      cd "$REPO_DIR"
                      git fetch origin
                      git checkout "$BRANCH"
                      git pull origin "$BRANCH"
                    fi

                    echo "===================================================================="
                    echo "preparations.sh"
                    echo "===================================================================="

                    # 1. Check Python version
                    echo "[Check] Python version:"
                    python3 --version || { echo " Python3 not found"; exit 1; }

                    # 2. Check if pip is available and install (upgrade) it
                    echo "[Check] Checking for pip..."

                    if ! python3 -m pip --version >/dev/null 2>&1; then
                        echo "[Missing] pip3 not found, installing it"
                        apt-get install python3-pip
                    else
                        echo "[OK] pip is present, upgrading..."
                        python3 -m pip install --upgrade pip
                    fi

                    # 3. Check if requirements.txt exists
                    if [ ! -f "requirements/base.txt" ]; then
                        echo " requirements/base.txt not found"
                        exit 1
                    fi
                    echo "[Check] Found requirements.txt"

                    # 4. Create virtual environment if missing
                    if [ ! -d "~/.venv" ]; then
                        echo "[Action] Creating virtual environment..."
                        python3 -m venv ~/.venv
                    else
                        echo "[Skip] Virtual environment already exists"
                    fi

                    # 5. Activate virtual environment
                    echo "[Action] Activating virtual environment..."
                    source ~/.venv/bin/activate

                    # 6. Install dependencies
                    echo "[Action] Installing dependencies..."
                    pip install -r requirements/base.txt

                    # 5. Deactivate virtual environment
                    echo "[Action] Deactivating virtual environment..."
                    deactivate

                    echo "===================================================================="
                    echo "deploy_systemd.sh"
                    echo "===================================================================="

                    BRANCH="main"
                    USER="armwrestling_training_bot"
                    PORT="8080"
                    WORKDIR="/home/armwrestling_training_bot/armwrestling_training_planner"
                    PYTHONPATH="$WORKDIR/.venv/bin/python"


                    SERVICE_NAME="armwrestling_training_bot@${BRANCH}.service"
                    TEMPLATE_PATH="$REPO_DIR/systemd/armwrestling_training_bot.service.template"
                    SERVICE_PATH="/etc/systemd/system/${SERVICE_NAME}"
                    TARGET_PATH="/etc/systemd/system/${SERVICE_NAME}"

                    echo "[Deploy] Generating systemd service file: $SERVICE_NAME"
                    sudo envsubst < "$TEMPLATE_PATH" > "$SERVICE_PATH"

                    echo "[Deploy] Reloading systemd daemon"
                    sudo systemctl daemon-reexec
                    sudo systemctl daemon-reload

                    echo "[Deploy] Enabling and restarting service: $SERVICE_NAME"
                    sudo systemctl enable "$SERVICE_NAME"
                    sudo systemctl restart "$SERVICE_NAME"

                    echo "[Deploy] Done: $SERVICE_NAME is running"
